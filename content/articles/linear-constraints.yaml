title: "Linear Constraints"
authors:
  - name: Arnaud Spiwack
    tweag: true
  - name: Csongor Kiss
    tweag: false
  - name: Jean-Philippe Bernardy
    tweag: true
  - name: Nicolas Wu
    tweag: false
  - name: Richard A. Eisenberg
    tweag: true
status: "Submitted"
links:
  # - ["Link", "https://dl.acm.org/doi/abs/10.1145/????"]
  - ["Arxiv", "https://arxiv.org/abs/2103.06127"]
# pdf: "linear-haskell"
tags: ["haskell", "linear types", "ghc", "inference"]
date: "2022"
abstract: >
  A linear parameter must be consumed exactly once in the body of its
  function. When declaring resources such as file handles and manually
  managed memory as linear arguments, a linear type system can verify
  that these resources are used safely. However, writing code with
  explicit linear arguments requires bureaucracy. This paper presents
  linear constraints, a front-end feature for linear typing that
  decreases the bureaucracy of working with linear types. Linear
  constraints are implicit linear arguments that are filled in
  automatically by the compiler. We present linear constraints as a
  qualified type system, together with an inference algorithm which
  extends GHC's existing constraint solver algorithm. Soundness of
  linear constraints is ensured by the fact that they desugar into
  Linear Haskell.
